##### 命令创建secret
echo -n 'admin' > ./username
echo -n 'redhat' > ./password

kubectl create secret generic db-user-pass --from-file=./username --from-file=./password



##### 手动加密
echo -n 'admin' | base64
YWRtaW4=
echo -n 'redhat' | base64
cmVkaGF0

cat << EOF > secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data:
  username: YWRtaW4=
  password: cmVkaGF0
EOF

kubectl create -f secret.yaml

[root@master01 ~]# kubectl get secrets 
NAME                  TYPE                                  DATA   AGE
default-token-pvq7m   kubernetes.io/service-account-token   3      6d6h
mysecret              Opaque                                2      3s

##### 解密
echo 'YWRtaW4=' | base64 --decode
#返回结果：admin

echo 'cmVkaGF0' | base64 --decode
#返回结果：redhat


##### volume挂在secret
cat << EOF > pod-volume-secret.yaml
apiVersion: v1
kind: Pod
metadata:
  name: pod-volume-secret
spec:
  containers:
  - name: pod-volume-secret
    image: nginx
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - name: test-user
      mountPath: "/storage"
      readOnly: true
  volumes:
  - name: test-user
    secret:
      secretName: mysecret
EOF

kubectl apply -f pod-volume-secret.yaml

kubectl exec -it pod-volume-secret -- cat /storage/*


##### pod使用环境变量
cat << EOF > pod-env-secret.yaml
apiVersion: v1
kind: Pod
metadata:
  name: pod-env-secret
spec:
  containers:
  - name: mycontainer
    image: nginx
    imagePullPolicy: IfNotPresent
    env:
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: username
      - name: SECRET_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: password
EOF

[root@master01 ~]# kubectl get pod
NAME             READY   STATUS    RESTARTS   AGE
pod-env-secret   1/1     Running   0          2s
[root@master01 ~]# kubectl exec -it pod-env-secret -- env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=pod-env-secret
TERM=xterm
SECRET_USERNAME=admin
SECRET_PASSWORD=redhat
KUBERNETES_SERVICE_PORT=443
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
KUBERNETES_SERVICE_HOST=10.96.0.1
NGINX_VERSION=1.15.6-1~stretch
NJS_VERSION=1.15.6.0.2.5-1~stretch
HOME=/root